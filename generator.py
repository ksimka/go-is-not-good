import json
from collections import defaultdict
from jinja2 import Template  # Requires jinja2 to be installed


with open('entries.json', 'r') as f:
    entries = sorted(json.load(f), key=lambda x: (x['Year'], x['Author']))

entry_txt = Template('''
# The List

{% for entry in entries %}+ {{ entry.URL }} ({{ entry.Author }}, {{ entry.Year }})
{% for complaint in entry.Complaints %}  - {{ complaint }}
{% endfor %}{% endfor %}
''').render(entries=entries)

complaint_map = defaultdict(list)
for e in entries:
    for c in e['Complaints']:
        complaint_map[c].append(e)

complaints_txt = Template('''
# Reverse complaints index

It's a reverse complaints index, generated by https://github.com/ksimka/go-is-not-good/blob/master/generator.go (thanks to @capoferro)

{% for complaint, entries in complaints %}+ {{ complaint }}
{% for entry in entries %}  - {{ entry.URL }} ({{ entry.Author }}, {{ entry.Year }})
{% endfor %}{% endfor %}
''').render(complaints=sorted(complaint_map.items(), key=lambda x: len(x[1]), reverse=True)) # Order by number of complaints

with open('README.md', 'w') as f:
    with open('HEADER.md', 'r') as hf:
        f.write(hf.read())

    f.write(entry_txt)
    f.write(complaints_txt)

    with open('FOOTER.md', 'r') as hf:
        f.write(hf.read())
